((breadthF ((X|T) | PATHS) (X|T))
    (goal X)
)

((breadthF (PAth | TPaths) SOL)
    (expand PAth NPaths)
    (append TPaths NPaths NEWPATHS)
    (breadthF NEWPATHS SOL)
)

((expand (HPath | TPath) NPaths)
    (findall (NEXT HPath | TPath)
		((path HPath NEXT)(negg member NEXT (HPath | TPath)))
        NPaths
    )
)

((solve_BF S G SOL)
    (kill goal)
    (addcl ((goal G)))
    (breadthF ((S)) S1)
    (reverse S1 SOL)
    (pretty_print_solution SOL)
    (delcl ((goal G)))
)

((depthF ((X|T) | PATHS) (X|T))
    (goal X)
)

((depthF (PAth | TPaths) SOL)
    (expand PAth NPaths)
    (append NPaths TPaths NEWPATHS)
    (depthF NEWPATHS SOL))

((solve_DF S G SOL)
    (kill goal)
    (addcl ((goal G)))
    (depthF ((S)) S1)
    (reverse S1 SOL)
    (pretty_print_solution SOL)
    (delcl ((goal G)))
)

/* auxiliary predicates */

((member H (H|_)))
((member X (H|T))(member X T))

((print ())(p success))
((print (H | T))
     (p H "--->")
     (pp)(print T)) 

((reverse () ()))
((reverse (H|T) R)(reverse T RT)(append RT (H) R))

((append () L L))
((append (H|T) L2 (H|L))(append T L2 L))